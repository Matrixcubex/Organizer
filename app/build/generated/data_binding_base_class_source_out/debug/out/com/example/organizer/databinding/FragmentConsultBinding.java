// Generated by view binder compiler. Do not edit!
package com.example.organizer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.organizer.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentConsultBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnMonth;

  @NonNull
  public final Button btnRange;

  @NonNull
  public final Button btnRefresh;

  @NonNull
  public final Button btnToday;

  @NonNull
  public final Button btnYear;

  @NonNull
  public final TextView emptyStateText;

  @NonNull
  public final RecyclerView eventsRecyclerView;

  @NonNull
  public final Button filterButton;

  @NonNull
  public final TextView filterStatusText;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final Spinner statusFilterSpinner;

  @NonNull
  public final Spinner typeFilterSpinner;

  private FragmentConsultBinding(@NonNull LinearLayout rootView, @NonNull Button btnMonth,
      @NonNull Button btnRange, @NonNull Button btnRefresh, @NonNull Button btnToday,
      @NonNull Button btnYear, @NonNull TextView emptyStateText,
      @NonNull RecyclerView eventsRecyclerView, @NonNull Button filterButton,
      @NonNull TextView filterStatusText, @NonNull ProgressBar progressBar,
      @NonNull Spinner statusFilterSpinner, @NonNull Spinner typeFilterSpinner) {
    this.rootView = rootView;
    this.btnMonth = btnMonth;
    this.btnRange = btnRange;
    this.btnRefresh = btnRefresh;
    this.btnToday = btnToday;
    this.btnYear = btnYear;
    this.emptyStateText = emptyStateText;
    this.eventsRecyclerView = eventsRecyclerView;
    this.filterButton = filterButton;
    this.filterStatusText = filterStatusText;
    this.progressBar = progressBar;
    this.statusFilterSpinner = statusFilterSpinner;
    this.typeFilterSpinner = typeFilterSpinner;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentConsultBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentConsultBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_consult, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentConsultBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnMonth;
      Button btnMonth = ViewBindings.findChildViewById(rootView, id);
      if (btnMonth == null) {
        break missingId;
      }

      id = R.id.btnRange;
      Button btnRange = ViewBindings.findChildViewById(rootView, id);
      if (btnRange == null) {
        break missingId;
      }

      id = R.id.btnRefresh;
      Button btnRefresh = ViewBindings.findChildViewById(rootView, id);
      if (btnRefresh == null) {
        break missingId;
      }

      id = R.id.btnToday;
      Button btnToday = ViewBindings.findChildViewById(rootView, id);
      if (btnToday == null) {
        break missingId;
      }

      id = R.id.btnYear;
      Button btnYear = ViewBindings.findChildViewById(rootView, id);
      if (btnYear == null) {
        break missingId;
      }

      id = R.id.emptyStateText;
      TextView emptyStateText = ViewBindings.findChildViewById(rootView, id);
      if (emptyStateText == null) {
        break missingId;
      }

      id = R.id.eventsRecyclerView;
      RecyclerView eventsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (eventsRecyclerView == null) {
        break missingId;
      }

      id = R.id.filterButton;
      Button filterButton = ViewBindings.findChildViewById(rootView, id);
      if (filterButton == null) {
        break missingId;
      }

      id = R.id.filterStatusText;
      TextView filterStatusText = ViewBindings.findChildViewById(rootView, id);
      if (filterStatusText == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.statusFilterSpinner;
      Spinner statusFilterSpinner = ViewBindings.findChildViewById(rootView, id);
      if (statusFilterSpinner == null) {
        break missingId;
      }

      id = R.id.typeFilterSpinner;
      Spinner typeFilterSpinner = ViewBindings.findChildViewById(rootView, id);
      if (typeFilterSpinner == null) {
        break missingId;
      }

      return new FragmentConsultBinding((LinearLayout) rootView, btnMonth, btnRange, btnRefresh,
          btnToday, btnYear, emptyStateText, eventsRecyclerView, filterButton, filterStatusText,
          progressBar, statusFilterSpinner, typeFilterSpinner);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
